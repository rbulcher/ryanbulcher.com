{"version":3,"sources":["Stock.js","App.js","index.js"],"names":["Stock","props","handleStockChange","event","setState","stock","target","value","console","log","handleSubmit","preventDefault","currentStock","state","fetchStock","stockChartXValues","stockChartYValues","this","pointerToThis","StockSymbol","API_Call","stockChartXValuesFunction","stockChartYValuesFunction","fetch","then","response","json","data","key","push","onSubmit","type","onChange","x","y","mode","marker","color","layout","width","height","title","React","Component","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAiGeA,E,kDA1Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACVC,MAAOF,EAAMG,OAAOC,QAExBC,QAAQC,IAAIN,EAAMG,OAAOC,QAjBR,EAoBnBG,aAAe,SAAAP,GACXA,EAAMQ,iBACR,IAAIC,EAAe,EAAKC,MAAMR,MAC9B,EAAKS,WAAWF,IArBhB,EAAKC,MAAQ,CACXE,kBAAmB,GACnBC,kBAAmB,GACnBX,MAAO,IALQ,E,qDASnB,WACEY,KAAKH,e,wBAkBP,SAAWT,GACT,IAAMa,EAAgBD,KAElBE,EAAcd,EACde,EAAQ,uFAAmFD,EAAnF,sCAFI,oBAGZE,EAA4B,GAC5BC,EAA4B,GAChCd,QAAQC,IAAIU,GACTA,GACHI,MAAMH,GACHI,MACC,SAASC,GACP,OAAOA,EAASC,UAGnBF,MACC,SAASG,GAGP,IAAK,IAAIC,KAFTpB,QAAQC,IAAIkB,GAEIA,EAAK,uBACnBN,EAA0BQ,KAAKD,GAC/BN,EAA0BO,KAAKF,EAAK,uBAAuBC,GAAK,YAIlEV,EAAcd,SAAS,CACrBW,kBAAmBM,EACnBL,kBAAmBM,S,oBAO7B,WACE,OACE,gCACI,6CACF,uBAAMQ,SAAUb,KAAKP,aAArB,UACI,4CACQ,uBAAOqB,KAAK,OAAOxB,MAAOU,KAAKJ,MAAMR,MAAO2B,SAAUf,KAAKf,uBAEnE,wBAAQ6B,KAAK,SAAb,qBAEJ,8CACA,cAAC,IAAD,CACEJ,KAAM,CACJ,CACEM,EAAGhB,KAAKJ,MAAME,kBACdmB,EAAGjB,KAAKJ,MAAMG,kBACde,KAAM,UACNI,KAAM,gBACNC,OAAQ,CAACC,MAAO,WAGpBC,OAAQ,CAACC,MAAO,IAAKC,OAAQ,IAAKC,MAAO,UAAYxB,KAAKJ,MAAMR,gB,GApFtDqC,IAAMC,W,MCMXC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1099d2f8.chunk.js","sourcesContent":["import React from 'react';\nimport Plot from 'react-plotly.js';\n\n\n\n\nclass Stock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stockChartXValues: [],\n      stockChartYValues: [],\n      stock: ''\n    }\n  }\n\n  componentDidMount() {\n    this.fetchStock();\n  }\n\n  handleStockChange = (event) => {\n    this.setState({\n        stock: event.target.value\n    })\n    console.log(event.target.value)\n  }\n\n  handleSubmit = event => {\n      event.preventDefault()\n    let currentStock = this.state.stock\n    this.fetchStock(currentStock)\n  }\n\n\n\n  fetchStock(stock) {\n    const pointerToThis = this;\n    const API_KEY = '0N5GMVZEIMEEM6B6';\n    let StockSymbol = stock;\n    let API_Call = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${StockSymbol}&outputsize=compact&apikey=${API_KEY}`;\n    let stockChartXValuesFunction = [];\n    let stockChartYValuesFunction = [];\n    console.log(StockSymbol)\n    if(StockSymbol){\n    fetch(API_Call)\n      .then(\n        function(response) {\n          return response.json();\n        }\n      )\n      .then(\n        function(data) {\n          console.log(data);\n\n          for (var key in data['Time Series (Daily)']) {\n            stockChartXValuesFunction.push(key);\n            stockChartYValuesFunction.push(data['Time Series (Daily)'][key]['1. open']);\n          }\n\n          // console.log(stockChartXValuesFunction);\n          pointerToThis.setState({\n            stockChartXValues: stockChartXValuesFunction,\n            stockChartYValues: stockChartYValuesFunction\n          });\n        }\n      )\n  }\n}\n\n  render() {\n    return (\n      <div>\n          <h1>Enter Stock</h1>\n        <form onSubmit={this.handleSubmit}>\n            <label> Stock:\n                    <input type=\"text\" value={this.state.stock} onChange={this.handleStockChange} />\n            </label>\n            <button type=\"submit\">Find</button>\n        </form>\n        <h1>Stock Lookup</h1>\n        <Plot\n          data={[\n            {\n              x: this.state.stockChartXValues,\n              y: this.state.stockChartYValues,\n              type: 'scatter',\n              mode: 'lines+markers',\n              marker: {color: 'green'},\n            }\n          ]}\n          layout={{width: 720, height: 440, title: \"Stock: \" + this.state.stock}}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Stock;","import React from 'react';\nimport Stock from './Stock';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Stock></Stock>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}